const 
	space = ' ',
	length = 3;
var
	stack: array[1000] of integer;
	base: integer;
	MaxLen:  integer;
	readnum : integer;
	i : integer;
	temp : integer; 
function IsEmpty : integer;
begin
	if base = 0 then
		IsEmpty := 1
	else
		IsEmpty := 0
end;
function IsFull : integer;
begin
	if base = MaxLen then
		IsFull := 1
	else
		IsFull := 0
end;
procedure MakeEmpty;
begin
	base := 0
end;
procedure Pop;
begin
	if IsEmpty = 1 then
		write ("Stack is Empty")
	else 
		base := base - 1
end;
function Top : integer;
begin
	if IsEmpty = 1 then
		write ("Stack is Empty")
	else
		Top := stack[base-1]
end;
procedure Push (X : integer);
begin
	if IsFull = 1 then
		write ("Stack is Full")
	else begin
			stack[base] := X; 
			base := base + 1
	end
end;
procedure PopN(popNum : integer);
begin
	write (Top);
	if popNum > 1 then
		begin
		Pop;
		PopN(popNum - 1);
	end;
end;
function r(x : integer) : integer;
begin
	if x <> 1 then
		r := r(x-1)+1
	else
		r := 1
end;
begin
	read(temp);
	i := 7;
	write(space);
	write(i*4+ r(temp)+space);
end.
